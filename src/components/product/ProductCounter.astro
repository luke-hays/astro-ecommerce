<script>
  // Using nanostore since other components are going to need the quantity state in this store
  import {
    quantity,
    incrementQuantity,
    decrementQuantity,
  } from "../../stores/productCounter";

  const addProduct = document.getElementById("add");
  const removeProduct = document.getElementById("remove");

  if (addProduct) addProduct.addEventListener("click", incrementQuantity);
  if (removeProduct) removeProduct.addEventListener("click", decrementQuantity);

  // Set a listener on the current quantity to update the display when its changed by either imported function
  quantity.subscribe((quantity) => {
    const quantityDisplay = document.getElementById("quantity");
    if (quantityDisplay) quantityDisplay.textContent = quantity.toString();

    if (removeProduct) {
      if (quantity === 1) {
        removeProduct.setAttribute('disabled', 'true')
        removeProduct.setAttribute('variant', 'neutral')
      }
      if (quantity > 1 && removeProduct.hasAttribute('disabled')) {
        removeProduct.removeAttribute('disabled')
        removeProduct.setAttribute('variant', 'default')
      }
    }

    if (addProduct) {
      if (quantity === 10) {
        addProduct.setAttribute('disabled', 'true')
        addProduct.setAttribute('variant', 'neutral')
      }
      if (quantity < 10 && addProduct.hasAttribute('disabled')) {
        addProduct.removeAttribute('disabled')
        addProduct.setAttribute('variant', 'default')
      }
    }
  });
</script>

<div id="quantity-adder__container">
  <sl-button id="remove">-</sl-button>
  <div id="quantity"></div>
  <sl-button id="add">+</sl-button>
</div>

<style>
  #quantity-adder__container {
    display: flex;
    align-items: center;
  }

  #quantity {
    height: 2.5rem;
    width: 2.5rem;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: hsl(0, 0%, 100%);
    border-top: 1px;
    border-bottom: 1px;
    border-left: 0;
    border-right: 0;
    border-style: solid;
    border-color: hsl(240, 5%, 84%);
    box-sizing: border-box;
  }

  sl-button {
    width: 2.5rem;
    height: 2.5rem;
  }

  sl-button:first-child::part(base) {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }

  sl-button:last-child::part(base) {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }
</style>
