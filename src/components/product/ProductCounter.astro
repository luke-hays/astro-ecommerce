---
const { id, productQuantity } = Astro.props;
---

<script>
  // Using nanostore since other components are going to need the quantity state in this store
  import {
    $counts,
    incrementCount,
    decrementCount,
  } from "../../stores/productCounts";

  class ProductCounter extends HTMLElement {
    constructor() {
      super();

      const addProduct = this.querySelector("#add");
      const removeProduct = this.querySelector("#remove");
      const display = this.querySelector("#quantity");
      const id = this.dataset.id;
      const initialQuantity = parseInt(this.dataset.count ?? "1");

      if (!id) return;

      if (addProduct)
        addProduct.addEventListener("click", () => incrementCount(id));
      if (removeProduct)
        removeProduct.addEventListener("click", () => decrementCount(id));

      // Set a listener on the current quantity to update the display when its changed by either imported function
      $counts.subscribe((counts) => {
        const quantityDisplay = this.querySelector("#quantity");
        const count = counts[id];

        if (count == null) return;

        if (quantityDisplay)
          quantityDisplay.textContent = counts[id].toString();

        if (removeProduct) {
          if (counts[id] <= 1) {
            removeProduct.setAttribute("disabled", "true");
          }
          if (counts[id] > 1 && removeProduct.hasAttribute("disabled")) {
            removeProduct.removeAttribute("disabled");
          }
        }

        if (addProduct) {
          if (counts[id] >= 10) {
            addProduct.setAttribute("disabled", "true");
          }
          if (counts[id] < 10 && addProduct.hasAttribute("disabled")) {
            addProduct.removeAttribute("disabled");
          }
        }
      });

      let count = $counts.get()[id];

      if (count == null) {
        $counts.set({ ...$counts.get(), [id]: initialQuantity });
      } else {
        if (display) display.textContent = count.toString();
      }
    }
  }

  customElements.define("product-counter", ProductCounter);
</script>

<product-counter data-id={id} data-count={productQuantity}>
  <sl-button id="remove">-</sl-button>
  <div id="quantity"></div>
  <sl-button id="add">+</sl-button>
</product-counter>

<style>
  product-counter {
    display: flex;
    align-items: center;
  }

  #quantity {
    height: 2.5rem;
    width: 2.5rem;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: hsl(0, 0%, 100%);
    border-top: 1px;
    border-bottom: 1px;
    border-left: 0;
    border-right: 0;
    border-style: solid;
    border-color: hsl(240, 5%, 84%);
    box-sizing: border-box;
  }

  sl-button {
    width: 2.5rem;
    height: 2.5rem;
  }

  sl-button:first-child::part(base) {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }

  sl-button:last-child::part(base) {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }
</style>
