---
const {total} = Astro.props
---

<script>
  import "@shoelace-style/shoelace/dist/components/button/button.js";
  import "@shoelace-style/shoelace/dist/components/divider/divider.js";
  import { $totalCost } from "../../stores/totalCost";
  import { formatNumberToCurrency } from "../../utils/currency";

  class OrderTotal extends HTMLElement {
    constructor() {
      super();

      const totalElement = this.querySelector("#total");

      if (!totalElement) return;

      const orderTotal = parseFloat(this.dataset.total ?? "0");
      totalElement.textContent = formatNumberToCurrency(orderTotal)

      let loaded = false
      $totalCost.subscribe((cost) => {
        if (loaded) {
          totalElement.textContent = formatNumberToCurrency(cost);
        } else {
          loaded = true
        }
      });
    }
  }

  customElements.define("order-total", OrderTotal);
</script>

<order-total data-total={total}>
  <h2>Order total</h2>
  <sl-divider></sl-divider>
  <div class="total-label">
    Total: <span id="total"></span>
  </div>
  <sl-divider></sl-divider>
  <div class="continue-container">
    <sl-button id="continue" size="small"> Continue </sl-button>
  </div>
</order-total>

<style>
  order-total {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    border: 1px solid var(--color-text-ink-200);
    padding: 1rem 2rem;
    border-radius: 8px;
    background-color: white;
  }

  h2 {
    margin: 0;
  }

  .continue-container {
    display: flex;
    justify-content: end;
  }

  #continue {
    width: 5rem;
  }

  .total-label {
    font-weight: 600;
  }

  #total {
    font-weight: 400;
  }
</style>
