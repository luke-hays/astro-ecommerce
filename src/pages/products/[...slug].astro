---
import { getCollection } from "astro:content";
import { Image } from "astro:assets";

import ProductPageLayout from "../../layouts/ProductPageLayout.astro";

import ProductCounter from "../../components/product/ProductCounter.astro";
import Breadcrumb from "../../components/shared/Breadcrumb.astro";
import ProductImage from "../../components/product/ProductImage.astro";
import AddToCartButton from "../../components/product/AddToCartButton.astro";

import { buildCategoryBreadcrumbs } from "../../scripts/routes";
import { getProduct } from "../../scripts/product";
import { getImages } from "../../scripts/images";

// The product name is the slug
const { slug } = Astro.params;

const products = await getCollection("products");
const categories = await getCollection("categories");
const images = getImages();

const product = getProduct({ products, id: slug, images });

if (!product) return Astro.redirect("/404");

const breadcrumbs = buildCategoryBreadcrumbs(categories, product.category);
// let cart: Cart = {};
// if (Astro.cookies.has("cart")) {
//   const sessionId = Astro.cookies.get("cart")?.value;

//   if (sessionId) {
//     try {
//       const url = new URL(`/api/cart?session-id=${sessionId}`, Astro.url);
//       const response = await fetch(url);
//       cart = JSON.parse(await response.json());
//     } catch (error) {
//       console.error(error);
//     }
//   }
// }
---

<script>
  const productImage = document.querySelector('.product-image')
  const productImagePlaceholder = document.querySelector('.placeholder-image')

  productImage?.addEventListener('load', () => {
    productImagePlaceholder?.classList.add('loaded')
  })

  productImagePlaceholder?.addEventListener('transitionend', () => {
    productImage?.classList.add('loaded')
    productImagePlaceholder.remove()
  })

  await Promise.allSettled([
    customElements.whenDefined("sl-button"),
    customElements.whenDefined("sl-skeleton")
  ]);

  const productDisplay = document.querySelector(".product");

  if (productDisplay) productDisplay.classList.add("ready");
</script>

<ProductPageLayout>
  <div class="product">
    <div class="breadcrumbs">
      <Breadcrumb routes={breadcrumbs} />
    </div>
    <div class="image">
      <sl-skeleton class="placeholder-image" effect="pulse"></sl-skeleton>
      <Image src={product.image()} alt={product.name} class="product-image"/>
    </div>
    <section>
      <h2>{product.name}</h2>
      <p>{product.formattedPrice}</p>
      <p>{product.description}</p>
      <div class="product-controls">
        <ProductCounter id={product.id} />
        <AddToCartButton productId={product.id} />
      </div>
    </section>
  </div>
</ProductPageLayout>

<style>
  .product {
    display: grid;
    grid-template-areas:
      "breadcrumbs"
      "image"
      "details";
    grid-template-columns: 1fr;
    margin: 1.5rem 2rem;
    gap: 0.5rem;
    opacity: 0;
  }

  .product.ready {
    opacity: 1;
    transition: 0.4s opacity;
  }

  .breadcrumbs {
    grid-area: breadcrumbs;
  }

  .image {
    grid-area: image;
  }

  sl-skeleton::part(indicator) {
    height: 30rem;
    width: 25rem;
    border-radius: 0;
    opacity: 1;
  }

  .placeholder-image.loaded {
    opacity: 0;
    transition: 0.4s opacity;
  }

  .product-image {
    height: 0;
    width: 0;
    object-fit: cover;
  }

  .product-image.loaded {
    height: 30rem;
    width: 25rem;
  }

  .product-controls {
    display: flex;
    gap: 0.5rem;
  }

  section {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    grid-area: details;
    margin-left: 1rem;
  }

  h2 {
    margin: 0;
    color: var(--color-text-ink-500);
  }

  p {
    margin: 0;
    color: var(--color-text-ink-400);
  }

  @media (min-width: 768px) {
    .product {
      display: grid;
      grid-template-areas:
        "breadcrumbs breadcrumbs"
        "image details";
      grid-template-columns: 1fr 1fr;
      margin: 1.5rem 2rem;
      gap: 0.5rem;
    }
  }
</style>

