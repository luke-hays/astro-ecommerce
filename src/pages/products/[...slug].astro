---
// TODO: Get User's initial quantiy of this product
import { getCollection } from "astro:content";

import BaseLayout from "../../layouts/BaseLayout.astro";
import ProductCounter from "../../components/product/ProductCounter.astro";
import Breadcrumb from "../../components/shared/Breadcrumb.astro";
import ProductImage from "../../components/product/ProductImage.astro";
import AddToCartButton from "../../components/product/AddToCartButton.astro";

import { getImages } from "../../scripts/images";
import { getProduct } from "../../scripts/product";
import { buildCategoryBreadcrumbs } from "../../scripts/routes";

// The product name is the slug
const { slug } = Astro.params;

const products = await getCollection("products");
const categories = await getCollection("categories");
const images = getImages();

const product = getProduct({ products, id: slug, images });

if (!product) return Astro.redirect("/404");

const breadcrumbs = buildCategoryBreadcrumbs(categories, product.category);

let cart: Cart = {};
if (Astro.cookies.has("cart")) {
  const sessionId = Astro.cookies.get("cart")?.value;

  if (sessionId) {
    try {
      const url = new URL(`/api/cart?session-id=${sessionId}`, Astro.url);
      const response = await fetch(url);
      cart = JSON.parse(await response.json());
    } catch (error) {
      console.error(error);
    }
  }
}
---

<script>
  await Promise.allSettled([customElements.whenDefined("sl-button")]);

  const layout = document.getElementById("product-layout");

  if (layout) layout.classList.add("ready");
</script>

<BaseLayout>
  <div class="product">
    <div id="product-layout">
      <div class="breadcrumbs">
        <Breadcrumb routes={breadcrumbs} />
      </div>
      <div class="product-image">
        <ProductImage product={product} />
      </div>
      <section>
        <h2>{product.name}</h2>
        <p>{product.formattedPrice}</p>
        <p>{product.description}</p>
        <div class="product-controls">
          <ProductCounter id={product.id} productQuantity={cart[product.id]} />
          <AddToCartButton productId={product.id} />
        </div>
      </section>
    </div>
  </div>
</BaseLayout>

<style>
  #product-layout {
    display: grid;
    grid-template-areas:
      "breadcrumbs"
      "image"
      "details";
    grid-template-columns: 1fr;
    margin: 1.5rem 2rem;
    gap: 0.5rem;
    opacity: 0;
  }

  #product-layout.ready {
    opacity: 1;
    transition: 0.25s opacity;
  }

  section {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    grid-area: details;
  }

  .breadcrumbs {
    grid-area: breadcrumbs;
  }

  .product-image {
    grid-area: image;
  }

  h2 {
    margin: 0;
    color: var(--color-text-ink-500);
  }

  p {
    margin: 0;
    color: var(--color-text-ink-400);
  }

  .product-controls {
    display: flex;
    gap: 0.5rem;
  }

  @media (min-width: 768px) {
    .product {
      display: flex;
      justify-content: center;
    }

    #product-layout {
      display: grid;
      grid-template-areas:
        "breadcrumbs breadcrumbs"
        "image details";
      grid-template-columns: minmax(25rem, 35rem) 1fr;
      margin: 1.5rem 2rem;
      gap: 0.5rem;
    }

    .img-container {
      width: 100%;
      max-width: 35rem;
      height: 40rem;
    }

    section {
      padding: 1rem 2rem;
    }
  }

  @media (min-width: 1536px) {
    h2 {
      font-size: x-large;
    }

    p {
      font-size: large;
    }
  }
</style>
