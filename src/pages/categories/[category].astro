---
import { getCollection } from "astro:content";
import { Image } from "astro:assets";

import BaseLayout from "../../layouts/BaseLayout.astro";

import { getProductsByCategory } from "../../scripts/product";
import { getImages } from "../../scripts/images";

const { category } = Astro.params;
if (category == null) Astro.redirect("/404");

const categoryCollection = await getCollection("categories");
const productCollection = await getCollection("products");
const images = getImages();

const categoryName = categoryCollection.find((c) => c.id === category)?.data
  .name;
const products = getProductsByCategory({
  products: productCollection,
  categories: categoryCollection,
  images,
  category: categoryName,
});
---

<BaseLayout>
  <div class="product-container">
    <h1>{categoryName}</h1>
    <div class="product-gallery">
      {
        products.map((product) => {
          return (
            <a class="product" href={product.route}>
              <Image src={product.image()} alt={product.name} />
              <div class="product-name">{product.name}</div>
              <div class="product-price">{product.formattedPrice}</div>
            </a>
          );
        })
      }
    </div>
  </div>
</BaseLayout>

<style>
  .product-container {
    padding: 1.5rem 0.5rem;
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  h1 {
    margin: 0;
    color: var(--color-text-ink-400);
    font-size: 1.75rem;
  }

  .product-gallery {
    display: grid;
    grid-template-columns: repeat(auto-fit, 11rem);
    grid-template-rows: max-content;
    gap: 1.5rem;
  }

  .product {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    text-decoration: none;
  }

  img {
    width: 100%;
    height: auto;
    object-fit: cover;
  }

  .product-price {
    font-size: medium;
    color: var(--color-text-ink-300);
  }

  .product-name {
    font-size: large;
    color: var(--color-text-ink-400);
  }

  @media (min-width: 1024px) {
    .product-gallery {
      grid-template-columns: repeat(5, minmax(11rem, 17rem));
    }
  } */
</style>
