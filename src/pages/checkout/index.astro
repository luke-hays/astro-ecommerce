---
import { getCollection } from "astro:content";

import BaseLayout from "../../layouts/BaseLayout.astro";
import ProductCard from "../../components/product/ProductCard.astro";

import { getImages } from "../../scripts/images";
import { getAllProductsInCart } from "../../scripts/product";

const productCollection = await getCollection("products");
const images = getImages();

let cart = {} as Cart;

let sessionId = ''
if (Astro.cookies.has("cart")) {
  sessionId = Astro.cookies.get("cart")?.value ?? '';

  console.log(sessionId)

  if (sessionId) {
    try {
      const url = new URL(`/api/cart?id=${sessionId}`, Astro.url);
      const response = await fetch(url);
      cart = JSON.parse(await response.json()) as Cart;
    } catch (error) {
      console.error(error);
    }
  }
}

const products = getAllProductsInCart(productCollection, images, cart);
const productsCount = Object.keys(products).length;
---

<script>
  import "@shoelace-style/shoelace/dist/components/button/button.js";
  import "@shoelace-style/shoelace/dist/components/divider/divider.js";

  import { $totalCost } from "../../stores/totalCost";
  import { formatNumberToCurrency } from "../../utils/currency";
  import { deleteCart } from "../../stores/cart";

  const totalElement = document.getElementById("total");
  const emptyCartButton = document.getElementById("empty-cart");
  const cartList = document.getElementById('cart-list');

  if (totalElement) {
    $totalCost.subscribe(
      (cost) => totalElement.textContent = formatNumberToCurrency(cost),
    );
  }

  if (emptyCartButton) {
    const sessionId = emptyCartButton.dataset.id
    if (sessionId) {
      emptyCartButton.addEventListener('click', () => {
        deleteCart(sessionId)
        cartList?.remove()
      })
    }
  }
</script>

<BaseLayout>
  <div class="checkout-layout">
    <div class="checkout-container">
      <div class="title">
        <h1>Your cart</h1>
        {productsCount > 0 && <sl-button size="small" id="empty-cart" data-id={sessionId}>Empty cart</sl-button>}
      </div>
      <div id='cart-list'>
        {
          products.map((product) => {
            return <ProductCard product={product} />;
          })
        }
      </div>
      {
        productsCount > 0 && (
          <div class="checkout-total">
            <h2>Order total</h2>
            <sl-divider />
            <div class="total-label">
              Total: <span id="total" />
            </div>
            <sl-divider />
            <div class="continue-container">
              <sl-button id="continue" size="small">
                Continue
              </sl-button>
            </div>
          </div>
        )
      }
    </div>
  </div>
</BaseLayout>

<style>
  h1 {
    margin: 1rem 0 0 0;
    color: var(--color-text-ink-500);
  }

  .checkout-layout {
    display: flex;
    justify-content: center;
  }

  .checkout-container {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
    margin: 1rem 2rem;
    min-width: 20rem;
    width: 100%;
    max-width: 40rem;
  }

  .title {
    display: flex;
    justify-content: space-between;
    align-items: end;
  }

  .checkout-total {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    border: 1px solid var(--color-text-ink-200);
    padding: 1rem 2rem;
    border-radius: 8px;
    background-color: white;
  }

  h2 {
    margin: 0;
  }

  .continue-container {
    display: flex;
    justify-content: end;
  }

  #continue {
    width: 5rem;
  }

  .total-label {
    font-weight: 600;
  }

  #total {
    font-weight: 400;
  }
</style>
